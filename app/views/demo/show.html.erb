<h1>各戦士の戦闘力</h1>
出典：<a href="http://dragonballbp.web.fc2.com/">ドラゴンボール戦闘力＜超公式＞決定版</a>
<h3>
  <br><font color="red">赤：</font>孫悟空
  <font color="blue">青：</font>孫悟飯
  <font color="yellow">黃：</font>ベジータ
  <font color="green">緑：</font>ピッコロ
</h3>

<script type="text/javascript">
    var margin = {top: 20, right: 20, bottom: 30, left: 150},
            width = 1500 - margin.left - margin.right,
            height = 700 - margin.top - margin.bottom;
 
    var parseDate = d3.time.format("%Y/%m/%d").parse;
 
    // スケールと出力レンジの定義
    var x = d3.time.scale()
            .range([0, width]);
 
    var y = d3.scale.log()
            .range([height, 0]);
 
    // 軸の定義
    var xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");
 
    var yAxis = d3.svg.axis()
            .scale(y)
            .ticks(10, 0)
            .orient("left");
 
    // 線の定義
    var line = d3.svg.line()
            .x(function(d) { return x(d.age); })
            .y(function(d) { return y(d.power); });
 
    // svgの定義
    var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")"); 
 
    // データを読み込む
    d3.json("/sensi.json", function(error, data) {
        // データをフォーマット
        for (sensi_name in data) {
            data[sensi_name].forEach(function(d) {
                d.age = parseDate(d.age);
                d.power = +d.power;
            });
        };
            
 
        // データを入力ドメインとして設定
        // 同時にextentで目盛りの単位が適切になるようにする
        x.domain(d3.extent(data.vegeta, function(d) { return d.age; }));
        y.domain(d3.extent(data.gohan, function(d) { return d.power; }));
 
        // x軸をsvgに表示
        svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .append("text")
                .attr("x", 1320)
                .attr("dx", ".71em")
                .style("text-anchor", "end")
                .text("エイジ");
 
        // y軸をsvgに表示
        svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .style("text-anchor", "end")
                .text("戦闘力");
 
        // path要素をsvgに表示し、折れ線グラフを設定
        for (sensi_name in data) {
            var line_name = 'line-' + sensi_name;
            svg.append("path")
                .datum(data[sensi_name])
                .attr("class", line_name)
                .attr("d", line);
        };
    });
</script>
